[
  {
    "path": "posts/2021-11-23-detecting-trends-in-renewable-energy-investment/",
    "title": "Regional Trends in Renewable Energy Investment",
    "description": "Here I explore the trend in annualized renewable and non-renewable energy investments by different regions around the world. I also test the statistical significance of the findings.",
    "author": [
      {
        "name": "Joe DeCesaro",
        "url": {}
      }
    ],
    "date": "2021-12-01",
    "categories": [
      "Statistics",
      "R",
      "Renewable Energy"
    ],
    "contents": "\n\nContents\nWhat\nis the global trend of regional renewable energy investment over\ntime?\nData\nAnalysis Plan\nResults\nSimple Renewable\nInvestment Trend Model\nSimple\nNon-renewable Investment Trend Model\nRegional\nRenewable Investment Trend Model\n\nNext Steps\nReferences\n\n\n\n\nShow code\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(readxl)\nlibrary(janitor)\nlibrary(broom)\nlibrary(sjPlot)\nlibrary(paletteer)\nlibrary(kableExtra)\n\n\n\nWhat\nis the global trend of regional renewable energy investment over\ntime?\nImplementation of renewable energy into electric grids around the\nworld will be key to curbing the effects of climate change. Currently,\nthree quarters of global greenhouse gas emissions result from fossil\nfuel energy production (Ritchie, Roser, 2020). As put by the\nInternational Renewable Energy Agency (IRENA), “meeting international\nclimate and development objectives will require a massive re-allocation\nof capital toward low-carbon technologies, including renewables, and the\nmobilization of all available capital sources”. In the past, renewable\nenergy technologies such as solar and wind have been expensive forms of\ngenerating electricity but, over the last ten years there has been a\nsteep decline in their costs. From 2009 to 2019 the price of electricity\nfrom solar power has dropped 89% and the wind has dropped 70% (Roser,\n2020). It might seem obvious that renewable portfolios have been growing\nin recent years as governments and politicians advertise, however does\ndata actually support this? How are investments in renewable\ntechnologies changing over time? How does this compare to investment in\nnon-renewable energy?\nAs climate change becomes an ever more present and increasing threat,\ndetecting these trends can tell us if the world is on the right track to\nreducing carbon emissions from energy generation. IRENA dives deep into\nthese questions in its report, “Global Landscape of Renewable Energy\nFinance 2020” for the time period of 2013-2018. The IRENA report\ncompares investment to climate goals like the Paris Agreement and makes\nrecommendations on how these goals can be met more effectively. It also\ndiscusses the sources of the capital for energy projects and dives into\noff-grid renewable finance. The data used for the analysis in this blog\npost is from IRENA and the Climate Policy Initiative (CPI) and covers\nthe time period of 2000-2020.\nThis blog post will take a more streamlined look at the general\ninvestment trend of global regions across time with linear regression\nmodels. Using a significance level of 0.05, I aim to detect whether the\nresults from the models are statistically significant. This post is by\nno means a comprehensive study, however it will provide some quick\ninsights. Some of the limitations of this analysis are discussed in the\n“Next Steps” section below.\nData\nIRENA provides the data used in its 2020 finance report available for\ndownload from its website in an excel file format. To accompany the\ndata, IRENA also posts a “methodology” document that discusses its\nsources and how its analysis was conducted. According to the methodology\nreport, the data used in this blog post can be, “freely, used, shared,\ncopied, reproduced, printed and/or stored.” It should be noted that all\nthe data from my analysis in this post is from IRENA and they hold the\ncopyright for it.\nFinancial data can be challenging to acquire and can cause some\nmisclassifications of recipients however, IRENA has standardized this\nprocess to the greatest extent possible for these data. Private\ninvestment information can be particularly challenging to find and these\ndate are primarily taken from the Bloomberg New Energy Finance database\nby IRENA. While, the data used in this analysis may not be comprehensive\nfor all financial investment data, it is likely some of the most\ncomprehensive that is freely available. The reported investment data are\nconservative according to the methodologies provided by IRENA to prevent\n“double-counts” as they state “under-reporting of renewable investments\nis preferred to over-reporting.” The methodology report also provides\ndetailed information about data sources, regional breakdowns, and more.\nThe IRENA 2020 report and its methodologies are fully referenced\nbelow.\nThe raw data from IRENA are broken down by individual project\ninvestments in renewable and non-renewable energy sources with the\namount of the investment in million USD. For each individual investment\nthere is a plethora of data available including the year, country,\nregion, donor, technology, and more. The time frame of data available\nfrom this data is from 2000-2020 This blog post will use annualized\ntotals of investment for global regions and therefore does not have a\nseasonal component. The countries represented in regional breakdowns\nwere not determined by the author of this post and is directly embedded\nfrom these IRENA data.\n\n\nShow code\n\n# Make file path for the data\nfp <- here(\"_posts/2021-11-23-detecting-trends-in-renewable-energy-investment/data/IRENA_RE_Public_Investment_July2021.xlsx\")\n\n# Read in the data using the readxl package\nfin_energy <- read_excel(fp)\n\n\n\n\n\nShow code\n\n# Clean the data to remove fields that are not needed\nfin_energy <- fin_energy %>% \n  clean_names() \n\n# Remove unnecessary columns and the \"multilateral\" region \nfin_energy <- fin_energy %>% \n  select(iso_code:region, year:technology, amount_2019_usd_million) %>% \n  filter(region != \"Multilateral\")\n\n\n\n\n\nShow code\n\n# Separate the data into the renewable and non-renewable investments\n# The category section is kept to rejoin the data later to differentiate easily in a graph\nrenewable_fin <- fin_energy %>% \n  filter(category == \"Renewables\") %>% \n  group_by(country_area, region, category, year) %>% \n  summarise(country_sum = sum(amount_2019_usd_million))\n\nnon_renewable_fin <- fin_energy %>% \n  filter(category ==\"Non-renewables\") %>% \n  group_by(country_area, region, category, year) %>% \n  summarise(country_sum = sum(amount_2019_usd_million))\n\n\n\n\n\nShow code\n\n# Make data frame for renewables for by region\nregion_renewable_fin <- renewable_fin %>% \n  group_by(region, category, year) %>% \n  summarise(region_sum = sum(country_sum))\n\n# Make data frame for non-renewables for by region\nregion_non_renewable_fin <- non_renewable_fin %>% \n  group_by(region, category, year) %>% \n  summarise(region_sum = sum(country_sum))\n\n# Make a data frame of the regional summations for graphing purposes later\nfull_region_fin <- full_join(x = region_renewable_fin, \n                             y = region_non_renewable_fin)\n\n\n\nAnalysis Plan\nFirst, a simple static time series model will explore the trend of\nthe total annual amount invested in renewable energy by region across\ntime. Regions are broken into Africa, Asia, Central America and the\nCaribbean, Eurasia, Europe, Middle East, Oceania, and South America. By\nrunning this simple model I aim to get a quick glimpse into the global\ntrend of renewable investment over time, if one exists. This assumes\nthat only the immediate year in question has an effect on the quantity\nof investment. This will then be compared to the trend in non-renewable\nenergy source investment over the same time period. As previously\nmentioned, a significance level of 0.05 will be used to determine\nstatistical significance. The null hypothesis for this first regression\nis that there is no relationship of annual renewable energy investment\nby regions over time.\nSecond, a more complex time series regression model will be produced\nwhere the primary simple regression model is broken up by regional\nheterogeneity to produce an interaction regression model. The first\ntrend regression model provides a quick insight into how the world is\ninvesting as a whole based on regional sums for each year. However, it\nis evident with accords like The Paris Agreement it will take each\ncountry’s and region’s participation to minimize and eventually reverse\nthe effects of climate change. With this in mind, the first regression\nmodel hides that certain regions are committing greater investments over\ntime than other regions.\nIf regions are truly committed to curbing climate change the second\nregression model will show an overall positive trend. This evaluation\nwill serve as a litmus test to observe regional commitment to global\nclimate agreements. The same significance level will be used to test the\nnull hypothesis that, within each region, there is no change of\nrenewable investment rate over time. Finally, regional renewable trends\nwill then be compared to their non-renewable counterparts.\nResults\nSimple Renewable\nInvestment Trend Model\nBelow is the result of the regression model that tests the effect of\nyear on renewable investment. The output below is from the\nsummary() function, which quickly provides summary\nstatistics in R.\n\n\nShow code\n\n# Lets make our simple model for renewable energy\nmodel_renew <- lm(region_sum ~ year, data = region_renewable_fin)\n\nsummary_model_renew <- summary(model_renew)\nsummary_model_renew\n\n\n\nCall:\nlm(formula = region_sum ~ year, data = region_renewable_fin)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2905.6 -1271.5  -523.4   486.5 11707.5 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -283692.95   53418.15  -5.311 3.13e-07 ***\nyear            141.88      26.58   5.339 2.73e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2167 on 184 degrees of freedom\nMultiple R-squared:  0.1341,    Adjusted R-squared:  0.1294 \nF-statistic:  28.5 on 1 and 184 DF,  p-value: 2.735e-07\n\nUsing the summary() function, we can quickly get some\ninsights from the regression model. From the output above the\ncoefficient estimate of the year tells us the annual rate of change of\ninvestment with each increasing year for global regions. From the\nregression model, this is 141.88 million USD. This tells us that,\naccording to this model, with each passing year we are seeing a increase\nin renewable investment by 142,000,000 USD across each region per year.\nOverall this is a positive trend for renewable investments year over\nyear.\nFrom the summary() function the p-value is represented\nin the “Coefficients” section of the table under “Pr(>|t|)”. The year\ncoefficient has a p-value below 0.001 which allows rejection of a null\nhypothesis that there is no relationship between annual renewable\ninvestment sums across time with a significance level of 0.05. It should\nbe noted that our R-squared value for this model is 0.13 however that is\nnot vital for this analysis as it is not focused on predicting outcomes\nof investment with high precision, but rather the overall trend from the\nyear coefficient and its’ associated p-value.\nWith the information above, I believe the originally proposed\nquestion is answered and these data support that there is a positive\nrate of investment in renewable projects over time. Now lets compare\nthat to non-renewables.\nSimple\nNon-renewable Investment Trend Model\n\n\nShow code\n\n# Lets make a model for non-renewables\nmodel_non_renew <- lm(region_sum ~ year, data = region_non_renewable_fin)\n\nsummary_model_non_renew <- summary(model_non_renew)\nsummary_model_non_renew\n\n\n\nCall:\nlm(formula = region_sum ~ year, data = region_non_renewable_fin)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2660.1 -1457.2  -796.8   -24.5 18677.7 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)   \n(Intercept) -218612.31   77728.01  -2.813  0.00549 **\nyear            109.54      38.67   2.833  0.00518 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2974 on 170 degrees of freedom\nMultiple R-squared:  0.04507,   Adjusted R-squared:  0.03945 \nF-statistic: 8.023 on 1 and 170 DF,  p-value: 0.005176\n\nFrom the summary() of this model, there is also a\npositive trend of non-renewable investment across regions. There is an\nannual increase in non-renewable investments by 109.54 million USD. With\na p-value of 0.005 a null hypothesis can be rejected that there is no\nrelationship between annual non-renewable investment over time with a\nsignificance level of 0.05.\nAccording to these two simple models, there is a larger increase in\nrenewable investments year over year in this 20-year time period\ncompared to non-renewables but as the standard errors for the models\noverlap this observation is not conclusive and this blog post will not\nbe pursuing this question. Below is a plot that compares renewable and\nnon-renewable investments over time, along with their respective\nmodels.\n\n\nShow code\n\nsimple_model_plot <- ggplot(data = full_region_fin, \n                            aes(x = year, \n                                y = region_sum,\n                                color = category)) + \n  geom_point(alpha = 0.8) +\n  scale_color_manual(name = \"Energy Type\", \n                     values = c(\"tan3\", \"darkgreen\")) +\n  geom_line(data = augment(model_renew),\n             aes( y = .fitted),\n             color = \"darkgreen\") +\n  geom_line(data = augment(model_non_renew),\n             aes( y = .fitted),\n             color = \"tan3\") +\n  labs(caption = \"Renewable investments from 2000-2020 are increasing at a rate of 141 million USD per year according\\nto this model. Non-renewable invesments over the same time period are increasing at a rate of\\n110 million USD per year.\",\n       title = \"Comparing Investment Renewable and Non-renewable Energy\\nInvestment Across Regional Sums\") +\n  xlab(label = \"Year\") +\n  ylab(label = \"Annual Regional Sum of Investment (million USD)\") +\n  theme_bw() +\n  theme(plot.caption = element_text(hjust = 0))\n  \nsimple_model_plot\n\n\n\n\nIt can be observed from the graph that there has been significant\ninvestment in renewable (green) and non-renewable (tan) energy projects\nsince the 2008 global recession. The plot illustrates just how much\nvariance there is in investment totals across regions in each year. As\ndiscussed above, the plot shows that there is a larger investment rate\nin renewables year-over-year. As this data is only from the years\n2000-2020 these investment trends do not reflect the historical\ninvestments in non-renewable energy sources. As this simple regression\nonly looks at the trend over time I will now investigate how these\ninvestment trends compare across separate regions.\nRegional Renewable\nInvestment Trend Model\nFor the regional renewable investment interaction regression model,\nthe same summary() function is used to calculate\ncoefficients and summary statistics. While the summary()\nfunction is useful, its’ output can be quite messy with interaction\nmodels; the table below is from the summary() results and\nincludes the annual investment rates for different regions and their\ncorresponding p-values. In the regression model, the North America\nregion was set as the base level of the regression. This was done\nbecause North America contains the United States, the country with the\nlargest GDP in the world and therefore a significant marker to compare\nagainst other regions.\n\n\nShow code\n\n# Make levels for regions with North America as first to compare our region to the rest of the world\nregion_renewable_fin$region <- factor(region_renewable_fin$region, levels = c(\"North America\", \"Africa\", \"Asia\", \"Central America and the Caribbean\", \"Eurasia\", \"Europe\", \"Middle East\", \"Oceania\", \"South America\"))\n\n# Make the regional investment model\nregion_model <-  lm(region_sum ~ year + region + region:year, data = region_renewable_fin)\nregion_renew_model_summary <- summary(region_model)\n\n\n\n\n\nShow code\n\n# Making the results a summary table\nsummary_renew_region_table <- data.frame(Region = c(\"North America\", \n                                                      \"Africa\", \n                                                      \"Asia\", \n                                                      \"Central America and the Caribbean\", \n                                                      \"Eurasia\", \n                                                      \"Europe\", \n                                                      \"Middle East\", \n                                                      \"Oceania\", \n                                                      \"South America\"), \n                                         Renewable_Investment = c(region_renew_model_summary$coefficients[2,\"Estimate\"], \n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[11,\"Estimate\"],\n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[12,\"Estimate\"],\n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[13,\"Estimate\"],\n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[14,\"Estimate\"],\n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[15,\"Estimate\"],\n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[16,\"Estimate\"],\n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[17,\"Estimate\"],\n                                                                  region_renew_model_summary$coefficients[2,\"Estimate\"] + region_renew_model_summary$coefficients[18,\"Estimate\"]),\n                                         p_value = c(region_renew_model_summary$coefficients[2,\"Pr(>|t|)\"], \n                                                                                         region_renew_model_summary$coefficients[11,\"Pr(>|t|)\"],\n                                                                                         region_renew_model_summary$coefficients[12,\"Pr(>|t|)\"],\n                                                                                         region_renew_model_summary$coefficients[13,\"Pr(>|t|)\"],\n                                                                                         region_renew_model_summary$coefficients[14,\"Pr(>|t|)\"],\n                                                                                         region_renew_model_summary$coefficients[15,\"Pr(>|t|)\"],\n                                                                                         region_renew_model_summary$coefficients[16,\"Pr(>|t|)\"],\n                                                                                         region_renew_model_summary$coefficients[17,\"Pr(>|t|)\"],\n                                                                                         region_renew_model_summary$coefficients[18,\"Pr(>|t|)\"])\n) %>% \n  mutate(Renewable_Investment = round(Renewable_Investment, 2))\n\nsummary_renew_region_table %>% \n  kable(col.names = c(\"Region\", \"Renewable Investment per Year (million USD)\", \"p-value\")) %>% \n  kable_styling(bootstrap_options = \"striped\", \n                full_width = FALSE, \n                latex_options = \"HOLD_position\")\n\n\n\nRegion\n\n\nRenewable Investment per Year (million USD)\n\n\np-value\n\n\nNorth America\n\n\n24.76\n\n\n0.6615318\n\n\nAfrica\n\n\n288.09\n\n\n0.0011902\n\n\nAsia\n\n\n234.07\n\n\n0.0095686\n\n\nCentral America and the Caribbean\n\n\n54.20\n\n\n0.7128610\n\n\nEurasia\n\n\n54.84\n\n\n0.7173467\n\n\nEurope\n\n\n315.08\n\n\n0.0003684\n\n\nMiddle East\n\n\n22.61\n\n\n0.9785519\n\n\nOceania\n\n\n7.27\n\n\n0.8400681\n\n\nSouth America\n\n\n255.03\n\n\n0.0044462\n\n\nThe annual investment rate of each region according to this linear\nregression interaction model is available in the table. The regions with\nthe two highest annual investment rates over time are Europe and Africa.\nEurope has widely been seen as a leader in renewable energy development\nand this is confirmed by the regression model. From IRENA’s raw data,\nAfrica’s renewable energy investment has been particularly high in\nhydropower throughout various countries. The regions with the two lowest\ninvestment rates over time are Oceania and the Middle East. Oceania is\nprimarily made up of island nations with low populations so large\ninvestments in these technologies can be challenging. The Middle East\nproduces large quantities of the world’s fossil fuels so its lack of\ninvestment is not surprising.\nThe only regions with p-values below a significance level of 0.05 are\nAfrica, Asia, Europe, and South America. Therefore, for these regions we\ncan reject the null hypothesis that there is no relationship for the\nregion’s annual investment in renewables over time. Below is a plot that\nshows the regional model and the renewable investment rates over time\nseparated by region.\n\n\nShow code\n\n# Plotting the regional model\nregional_model_plot <- ggplot(data = region_renewable_fin, \n                            aes(x = year, y = region_sum, color = region)) + \n  geom_point() + \n  geom_line(data = augment(region_model), \n             aes(y = .fitted)) + \n  scale_color_paletteer_d(\"colorBlindness::paletteMartin\") +\n  labs(caption = \"Renewable investments from 2000-2020 are increasing over time at greater rates for Europe, Africa,\\nSouth America, and Asia at a much greater rate than compared to the other regions. There are two\\ndistinct groups of renewable investment rates across time, a high investment group and a low\\ninvestment group\",\n       title = \"Determining the Annual Rate of Renewable Investment Over Time by\\nEach Region\") +\n  xlab(label = \"Year\") +\n  ylab(label = \"Annual Regional Sum of Investment (million USD)\") +\n  theme_bw() + \n  theme(plot.caption = element_text(hjust = 0)) + \n  guides(color = guide_legend(title = \"Region\"))\n\nregional_model_plot\n\n\n\n\nThe graphic clearly defines two different annual investment rate\ncategories for global regions, a high investment rate group and a low\ninvestment rate group. The high rate investment group contains Europe,\nAfrica,South America, and Asia. The low rate of investment group\ncontains North America, Central America and the Caribbean, Eurasia, the\nMiddle East, and Oceania.\nBased on the regional interaction regression model above, I do the\nsame for non-renewable energy investment and summarize both models into\none output table.\n\n\nShow code\n\n# Make levels for regions with North America as first to compare our region to the rest of the world\nregion_non_renewable_fin$region <- factor(region_non_renewable_fin$region, levels = c(\"North America\", \"Africa\", \"Asia\", \"Central America and the Caribbean\", \"Eurasia\", \"Europe\", \"Middle East\", \"Oceania\", \"South America\"))\n\n# Make the regional investment model\nregion_non_renew_model <-  lm(region_sum ~ year + region + region:year, data = region_non_renewable_fin)\nregion_non_renew_model_summary <- summary(region_non_renew_model)\n\n\n\n\n\nShow code\n\nsummary_investment_region_table <-  data.frame(summary_renew_region_table, \n                                               Non_Renewable_Investment = c(region_non_renew_model_summary$coefficients[2,\"Estimate\"], \n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[11,\"Estimate\"],\n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[12,\"Estimate\"],\n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[13,\"Estimate\"],\n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[14,\"Estimate\"],\n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[15,\"Estimate\"],\n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[16,\"Estimate\"],\n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[17,\"Estimate\"],\n                                                                  region_non_renew_model_summary$coefficients[2,\"Estimate\"] + region_non_renew_model_summary$coefficients[18,\"Estimate\"]), \n                                               Non_Renewable_p_value = c(region_non_renew_model_summary$coefficients[2,\"Pr(>|t|)\"], \n                                                                         region_non_renew_model_summary$coefficients[11,\"Pr(>|t|)\"],\n                                                                         region_non_renew_model_summary$coefficients[12,\"Pr(>|t|)\"],\n                                                                         region_non_renew_model_summary$coefficients[13,\"Pr(>|t|)\"],\n                                                                         region_non_renew_model_summary$coefficients[14,\"Pr(>|t|)\"],\n                                                                         region_non_renew_model_summary$coefficients[15,\"Pr(>|t|)\"],\n                                                                         region_non_renew_model_summary$coefficients[16,\"Pr(>|t|)\"],\n                                                                         region_non_renew_model_summary$coefficients[17,\"Pr(>|t|)\"],\n                                                                         region_non_renew_model_summary$coefficients[18,\"Pr(>|t|)\"])) %>% \n  mutate(Non_Renewable_Investment = round(Non_Renewable_Investment, 2))\n\n\n\n\n\nShow code\n\nsummary_investment_region_table %>% \n  kable(col.names = c(\"Region\", \n                      \"Renewable Investment per Year (million USD)\", \n                      \"Renewable p-value\",\n                      \"Non-renewable Investment per Year (million USD)\",\n                      \"Non-renewable p-value\")) %>% \n  kable_styling(bootstrap_options = \"striped\", \n                full_width = FALSE, \n                latex_options = \"HOLD_position\") %>% \n  column_spec(column = 1, width = \"1in\") %>% \n  column_spec(column = 2, width = \"1.3in\") %>% \n  column_spec(column = 3, width = \"1in\") %>% \n  column_spec(column = 4, width = \"1.3in\") %>% \n  column_spec(column = 5, width = \"1in\") \n\n\n\nRegion\n\n\nRenewable Investment per Year (million USD)\n\n\nRenewable p-value\n\n\nNon-renewable Investment per Year (million USD)\n\n\nNon-renewable p-value\n\n\nNorth America\n\n\n24.76\n\n\n0.6615318\n\n\n9.97\n\n\n0.9456139\n\n\nAfrica\n\n\n288.09\n\n\n0.0011902\n\n\n155.40\n\n\n0.4086434\n\n\nAsia\n\n\n234.07\n\n\n0.0095686\n\n\n254.85\n\n\n0.1649952\n\n\nCentral America and the Caribbean\n\n\n54.20\n\n\n0.7128610\n\n\n6.05\n\n\n0.9829376\n\n\nEurasia\n\n\n54.84\n\n\n0.7173467\n\n\n96.44\n\n\n0.6229642\n\n\nEurope\n\n\n315.08\n\n\n0.0003684\n\n\n81.26\n\n\n0.6852117\n\n\nMiddle East\n\n\n22.61\n\n\n0.9785519\n\n\n35.86\n\n\n0.8897374\n\n\nOceania\n\n\n7.27\n\n\n0.8400681\n\n\n-0.56\n\n\n0.9573164\n\n\nSouth America\n\n\n255.03\n\n\n0.0044462\n\n\n171.52\n\n\n0.3588261\n\n\nThe above table allows for the comparison of the annual rates of\nrenewable and non-renewable investment over time by each region and\ntheir corresponding p-values. The non-renewable regression model has no\ninvestment rate p-value below a significance level of 0.05. Therefore no\nnon-renewable investment rate can be considered statistically\nsignificant. For renewables, the investment rates for Africa, Asia,\nEurope, and South America can be considered statistically significant as\ntheir p-values are below a significance level of 0.05.\nSome interesting regional insights from this table however show that\nSouth America, Africa, and Asia are investing heavily in renewable and\nnon-renewable energies over time. These regions have economies that are\ndeveloping rapidly compared to other regions of the world and it is\nevident in these investment trends. According to the regression models,\nEurope has been investing the most in renewables compared to other\nregions year-over-year but not in non-renewables. However, as mentioned\nearlier no non-renewable investment rates can be considered\nstatistically significant so it is difficult to comment on non-renewable\ntrends as they may not exist.\nTo summarize, the world as a whole is investing more in renewable\nenergy projects each year. However, the world is also investing more in\nnon-renewable energy projects each year. By region, only the annual\ninvestment rates for Africa, Asia, Europe, and South America can be\nconsidered statistically significant as their p-values are below a\nsignificance level of 0.05. For other regions, the regression model\nfails to reject the null hypothesis that there is no relationship with\ninvestment in renewable projects over time.\nNext Steps\nThis blog post and regression analysis is by no means a comprehensive\nlook at financial investments over time by each region. It provides\nquick insights into how some regions are investing in renewable\ntechnologies at a greater rate over time compared to other regions.\nThere are many factors that can affect a regions total annual investment\ninto renewable energy.\nTo dive further into the questions put forward earlier, it would be\ninteresting to normalize investment rates with the GDP of each region.\nOne could also compare specific countries and the affect of the type of\ngovernment on renewable investment energies. Regional trends can also be\ngreatly affected by a single country’s influence so breaking down this\nanalysis by country would provide further insights. Another option would\nbe to compare the investment rates of countries with rapidly developing\neconomies compared to those who have developed economies to see if there\nare any relevant trends. As noted before, there is a visual trend in the\ngraphs that much greater investment occurred after the 2008 recession. A\ndeeper analysis could be done to see if this observation is statistical\nsignificant and to try and figure out what has caused it.\nReferences\nIRENA, & CPI. (n.d.-a). Global Landscape of\nRenewable Energy Finance 2020. 88.\nIRENA, & CPI. (n.d.-b). Global Landscape of\nRenewable Energy Finance 2020: Methodology. 16.\nRitchie, H., & Roser, M. (2020). Energy. Our\nWorld in Data. https://ourworldindata.org/renewable-energy\nRoser, M. (n.d.). Why did renewables become so cheap\nso fast? Our World in Data. https://ourworldindata.org/cheap-renewables-growth\n\n\n\n",
    "preview": "posts/2021-11-23-detecting-trends-in-renewable-energy-investment/images/Regional_Regression.png",
    "last_modified": "2022-05-07T10:57:39-07:00",
    "input_file": {},
    "preview_width": 3000,
    "preview_height": 2100
  },
  {
    "path": "posts/2022-05-08-protecting-whales-from-ships/",
    "title": "Protecting Whales from Ships",
    "description": "The goal of this assignment was to create a method to determine the outline of a speed reduction zone and its effect on the local marine traffic for Dominica.",
    "author": [
      {
        "name": "Joe DeCesaro",
        "url": {}
      }
    ],
    "date": "2021-11-16",
    "categories": [
      "Python",
      "Spatial Analysis"
    ],
    "contents": "\n\nContents\nIntroduction\nDominica outline\nWhale sighting data\nCreate a sampling grid\n\nExtract the whale\nhabitat\nCreate a convex hull\nVessel Data\nSetting up to\ncalcute speed and distance\nCalculations\n\nIntroduction\nThe goal of this assignment was to create a method to determine the\noutline of a speed reduction zone and its effect on the local marine\ntraffic for Dominica. The speed reduction zone encompasses the preferred\nhabitat of the local sperm whales. This area was approximated as areas\nof frequent whale sightings off the coast.\n# libraries for the assignment:\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom shapely.geometry import Polygon\nDominica outline\nWe downloaded the country outline into the notebook.\nfp = \"data/dominica/dma_admn_adm0_py_s1_dominode_v2.shp\"\n\ndom_outline = gpd.read_file(fp)\n\ndom_outline = dom_outline.to_crs(\"EPSG:4602\")\nWe plot the outline for exploration.\nfig, ax = plt.subplots(figsize=(3, 3), dpi = 200)\nax.grid(True)\ndom_outline.plot(ax = ax, \n                 color = \"darkgreen\")\n\nax.set_title(\"Dominica Outline\")\nax.set_xlabel(\"Longitude\")\nax.set_ylabel(\"Latitude\")\nText(94.618846252753, 0.5, 'Latitude')\npngWhale sighting data\nFirst, we read in the data and projected it into an appropriate\nCRS.\nfp_whales = \"data/sightings2005_2018.csv\"\n\nwhales = gpd.read_file(fp_whales)\n\ngeometry = gpd.points_from_xy(whales.Long, whales.Lat, crs = \"EPSG:4326\")\nwhales_geom = whales.set_geometry(geometry)\nNext we convert the geometries from degrees to meters.\nwhales_geom = whales_geom.to_crs(\"EPSG:2002\")\n\ndom_outline = dom_outline.to_crs(\"EPSG:2002\")\nCreate a sampling grid\nMaking the point observations into a habitat region.\nxmin, ymin, xmax, ymax = whales_geom.total_bounds\n\nlength = 2000\nwide = 2000\n\ncols = list(np.arange(xmin, xmax + wide, wide))\nrows = list(np.arange(ymin, ymax + length, length))\n\npolygons = []\nfor x in cols[:-1]:\n    for y in rows[:-1]:\n        polygons.append(Polygon([(x,y), (x+wide, y), (x+wide, y+length), (x, y+length)]))\n        \ngrid = gpd.GeoDataFrame({'geometry':polygons})\ngrid.to_file(\"grid.shp\")\nfp_grid = \"grid.shp\"\n\ngrid = gpd.read_file(fp_grid)\ngrid = grid.set_crs(\"EPSG:2002\")\ngrid = grid.to_crs(\"EPSG:2002\")\nPlotting the grid to make sure it looks how we expected.\nfig, ax = plt.subplots(figsize=(4, 4), dpi=200)\nax.grid(True)\n\ngrid.plot(ax = ax, \n          facecolor = \"none\", \n          lw = 0.1)\n<AxesSubplot:>\npngExtract the whale habitat\nNow we spatially joined the grid we made in the previous step with\nour sighting data to count the number of sightings in each cell.\ngrid_join = grid.sjoin(whales_geom, how = \"inner\")\ngrid['count'] = grid_join.groupby(grid_join.index).count()['index_right']\ngrid = grid.loc[(grid['count'] > 20)]\nCreate a convex hull\nWe used unary_union to create a Multipolygon containing\nthe union of all geometries in the GeoSeries\nspeed_zone = grid.unary_union\nspeed_zone\nsvgspeed_zone = gpd.GeoSeries(speed_zone)\nspeed_zone = speed_zone.convex_hull\nspeed_zone.plot()\n<AxesSubplot:>\npngThe plot above is now our habitat zone. Next we added it to the\nDominica outline.\nspeed_zone = gpd.GeoDataFrame({'geometry':speed_zone}, crs = 2002)\nfig, ax = plt.subplots(figsize = (10,10), dpi = 200)\ndom_outline.plot(ax = ax, \n                 color = \"darkgreen\")\nspeed_zone.plot(ax = ax, \n                color = \"lightyellow\", \n                edgecolor = \"black\", \n               alpha = 0.5)\nax.set_title(\"Dominica Outline and Sperm Whale Habitat\")\nax.set_xlabel(\"Longitude\")\nax.set_ylabel(\"Latitude\")\nText(364.48357887628714, 0.5, 'Latitude')\npngThere is some overlap from the outline of Dominica and the habitat\nbut that is fine for our calculations. Next we will upload the vessel\ndata.\nVessel Data\nUsing the Automatic Identification System (AIS) we loaded the vessel\ndata.\nfp_vessels = \"data/station1249.csv\"\n\nvessels = gpd.read_file(fp_vessels)\n\ngeometry = gpd.points_from_xy(vessels.LON, vessels.LAT, crs = \"EPSG:4326\")\nvessels_geom = vessels.set_geometry(geometry)\nvessels_geom = vessels_geom.to_crs(\"EPSG:2002\")\nNext we explored the datatypes to make sure they are what we\nexpected.\nprint(vessels_geom.dtypes)\nfield_1        object\nMMSI           object\nLON            object\nLAT            object\nTIMESTAMP      object\ngeometry     geometry\ndtype: object\nThe ‘TIMESTAMP’ data is not in datetime formatting so we changed\nit.\nvessels_geom['TIMESTAMP'] = pd.to_datetime(vessels_geom['TIMESTAMP'], format = '%Y-%m-%d %H:%M:%S')\nprint(vessels_geom.dtypes)\nfield_1              object\nMMSI                 object\nLON                  object\nLAT                  object\nTIMESTAMP    datetime64[ns]\ngeometry           geometry\ndtype: object\nSetting up to calcute\nspeed and distance\nA few things needed to be done to make the necessary calculations: 1)\nSpatially subset vessel tracks within whale habitat 2) Sort the\ndataframe by MMSI and TIMESTAMP 3) Create a copy of the dataframe and\nshift each observation down one row using shift() and then join with the\noriginal dataset 4) Drop all rows in the joined dataframe in which the\nMMSI of the left is not the same as the one on the right. 5) Set the\ngeometry column with the set_geometry() function\n# 1) spatial subsetting\nvessels_geom = vessels_geom.sjoin(speed_zone, how = \"inner\")\n# 2) sorted the df by MMSI and TIMESTAMP\nvessels_geom = vessels_geom.sort_values(by = [\"MMSI\", \"TIMESTAMP\"])\n# 3) created a copy of our df and shifted down a row then joined back with original dataset\nvs_geom_copy = vessels_geom.shift(1)\n\n# joined back with original dataset\nvessels_joined = vs_geom_copy.join(vessels_geom,\n                                   how = \"left\",\n                                  lsuffix = 'start',\n                                  rsuffix = 'end')\n# 4) Dropped rows where the MMSI did not match\nvessels_joined_filt = vessels_joined[vessels_joined[\"MMSIstart\"] == vessels_joined[\"MMSIend\"]]\n# 5) Set the geometry column\nvessels_joined_filt = vessels_joined_filt.set_geometry(\"geometrystart\")\nCalculations\nThe distance for each observation to the next\nThe time difference between each observation to the next\nThe average speed between each observation to the next\nThe time that the distance would have taken at 10 knots.\nThe difference between the time that it actually took and how much\nit would have taken at 10 knots.\nFinally, sum up the extra time the 10 knots zone would have taken\nfor all ships!\n# 1) Distance between observations\nvessels_joined_filt['distance'] = vessels_joined_filt['geometrystart'].distance(vessels_joined_filt['geometryend'])\n# 2) Time difference between observations\nvessels_joined_filt['time_diff'] = vessels_joined_filt['TIMESTAMPend'] - vessels_joined_filt['TIMESTAMPstart']\n# 3) The average speed between each observation\nvessels_joined_filt['avg_speed_m_s'] = vessels_joined_filt['distance']/vessels_joined_filt['time_diff'].dt.total_seconds()\n# 4) Time that the distance would have taken at 10 knots.\n# 10 knot = 5.1444 m/s\nkts_10 = 5.1444\nvessels_joined_filt['time_10kts_tot_s'] = (vessels_joined_filt['distance'] / kts_10)\n# 5) Difference between the time that it actually took and time it would have taken at 10 knots\nvessels_joined_filt['time_10kts_diff_hr'] = (vessels_joined_filt['time_10kts_tot_s'] - vessels_joined_filt['time_diff'].dt.total_seconds()) / (60 *60)\n\n# Below is what the head() of the data looks like after adding the columns from these calculations\nvessels_joined_filt.head()\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n\n\n\nfield_1start\n\n\nMMSIstart\n\n\nLONstart\n\n\nLATstart\n\n\nTIMESTAMPstart\n\n\ngeometrystart\n\n\nindex_rightstart\n\n\nfield_1end\n\n\nMMSIend\n\n\nLONend\n\n\nLATend\n\n\nTIMESTAMPend\n\n\ngeometryend\n\n\nindex_rightend\n\n\ndistance\n\n\ntime_diff\n\n\navg_speed_m_s\n\n\ntime_10kts_tot_s\n\n\ntime_10kts_diff_hr\n\n\n235018\n\n\n235025\n\n\n203106200\n\n\n-61.40929\n\n\n15.21021\n\n\n2015-02-25 15:32:20\n\n\nPOINT (462476.396 1680935.224)\n\n\n0.0\n\n\n235018\n\n\n203106200\n\n\n-61.41107\n\n\n15.21436\n\n\n2015-02-25 15:34:50\n\n\nPOINT (462283.995 1681393.698)\n\n\n0\n\n\n497.209041\n\n\n0 days 00:02:30\n\n\n3.314727\n\n\n96.650541\n\n\n-0.014819\n\n\n235000\n\n\n235018\n\n\n203106200\n\n\n-61.41107\n\n\n15.21436\n\n\n2015-02-25 15:34:50\n\n\nPOINT (462283.995 1681393.698)\n\n\n0.0\n\n\n235000\n\n\n203106200\n\n\n-61.41427\n\n\n15.22638\n\n\n2015-02-25 15:42:19\n\n\nPOINT (461936.769 1682722.187)\n\n\n0\n\n\n1373.116137\n\n\n0 days 00:07:29\n\n\n3.058165\n\n\n266.914730\n\n\n-0.050579\n\n\n234989\n\n\n235000\n\n\n203106200\n\n\n-61.41427\n\n\n15.22638\n\n\n2015-02-25 15:42:19\n\n\nPOINT (461936.769 1682722.187)\n\n\n0.0\n\n\n234989\n\n\n203106200\n\n\n-61.41553\n\n\n15.2353\n\n\n2015-02-25 15:47:19\n\n\nPOINT (461798.818 1683708.377)\n\n\n0\n\n\n995.792381\n\n\n0 days 00:05:00\n\n\n3.319308\n\n\n193.568226\n\n\n-0.029564\n\n\n234984\n\n\n234989\n\n\n203106200\n\n\n-61.41553\n\n\n15.2353\n\n\n2015-02-25 15:47:19\n\n\nPOINT (461798.818 1683708.377)\n\n\n0.0\n\n\n234984\n\n\n203106200\n\n\n-61.41687\n\n\n15.23792\n\n\n2015-02-25 15:49:50\n\n\nPOINT (461654.150 1683997.765)\n\n\n0\n\n\n323.533223\n\n\n0 days 00:02:31\n\n\n2.142604\n\n\n62.890371\n\n\n-0.024475\n\n\n234972\n\n\n234984\n\n\n203106200\n\n\n-61.41687\n\n\n15.23792\n\n\n2015-02-25 15:49:50\n\n\nPOINT (461654.150 1683997.765)\n\n\n0.0\n\n\n234972\n\n\n203106200\n\n\n-61.41851\n\n\n15.24147\n\n\n2015-02-25 15:54:49\n\n\nPOINT (461476.997 1684389.925)\n\n\n0\n\n\n430.317090\n\n\n0 days 00:04:59\n\n\n1.439188\n\n\n83.647673\n\n\n-0.059820\n\n\n# 6) Final calculation\nincreased_time = vessels_joined_filt[vessels_joined_filt['time_10kts_diff_hr'] > 0] \nprint(\"The increased travel time for the ship traffic is \", \n      round((increased_time['time_10kts_diff_hr'].sum())/24, 2),\n     \" days.\")\nThe increased travel time for the ship traffic is  27.88  days.\n\n\n\n",
    "preview": "posts/2022-05-08-protecting-whales-from-ships/protection_area.png",
    "last_modified": "2022-05-08T15:34:48-07:00",
    "input_file": {},
    "preview_width": 1296,
    "preview_height": 1679
  },
  {
    "path": "posts/2022-05-07-houston-blackout-analysis/",
    "title": "Houston Blackout Analysis (February 2021)",
    "description": "Using night light data from NASA's Worldview to identify residences in the Houston metropolitan area that lost power during the major blackout in February 2021.",
    "author": [
      {
        "name": "Joe DeCesaro",
        "url": {}
      }
    ],
    "date": "2021-10-24",
    "categories": [
      "R",
      "Spatial Analysis",
      "Remote Sensing"
    ],
    "contents": "\n\nContents\nThe Analysis\nLoad Libraries\nFunction\nto Load the DNB Dataset from VNP46A1 Granules\nLoad in the\nSatellite Data: tilenumber_mm_dd\nCombine Tiles by Day\nCreate a Blackout Mask\nVectorize the Blackout\nMask\nCrop\nthe Vectorized Mask with the Region of Interest (ROI)\nSpatial Subsetting\n\nRead in and Process\nthe Roads Data\nFunction to\nLoad the Doads Data from OpenStreetMap\nBuffer the roads\n\nRead in and\nProcess the Buildings Data\nFunction\nto Load the Buildings Data from OpenStreetMap\nReprojecting the\nResidences Data\n\nRead in the Census tract\ndata\nMerge the Datasets\nMerge\nthe Night Lights Data, the Buffered Highways, and the\nResidences\nMerge\nthe census tract geometries with the census income data\n\nQuestion\n1: How many residential buildings were without power on\n2021-02-16?\nQuestion\n2: Is there a socioeconomic metric that predicts being affected by the\npower outage?\nConclusions\n\n\nThe Analysis\nIn this assignment for our Spatial Analysis class, we use\nremotely-sensed light data from NASA’s Worldview to identify residences\nin the Houston metropolitan area that lost power during the major\nblackout in February 2021. The goal of the analysis is to:\nEstimate how many residential buildings were without power on\n2021/02/16?\nIs there a socioeconomic metric that predicts being affected by the\npower outage?\nThe data was specifically acquired from the Visible Infrared Imaging\nRadiometer Suite (VIIRS) on the Suomi satellite. Using highways data\nfrom Open Street Map, residences within 200 meters of a major highway\nwere excluded. Residence building count was based on Open Street Map’s\nbuildings data. Lastly, a few socioeconomic indicators from census data\nis explored for correlations with likelihood of being impacted by the\nblackout.\nLoad Libraries\n\n\nShow code\n\nlibrary(sf)\nlibrary(stars)\nlibrary(tidyverse)\nlibrary(raster)\nlibrary(tmap)\nlibrary(rosm)\nlibrary(patchwork)\n\n\n\nFunction\nto Load the DNB Dataset from VNP46A1 Granules\n\n\nShow code\n\nread_dnb <- function(file_name) {\n  # Reads the \"DNB_At_Sensor_Radiance_500m\" dataset from a VNP46A1 granule into a STARS object.\n  # Then read the sinolsoidal tile x/y positions and adjust the STARS dimensions (extent+delta)\n\n  # The name of the dataset holding the nightlight band in the granule\n  dataset_name <- \"//HDFEOS/GRIDS/VNP_Grid_DNB/Data_Fields/DNB_At_Sensor_Radiance_500m\"\n\n  # From the metadata, we pull out a string containing the horizontal and vertical tile index\n  h_string <- gdal_metadata(file_name)[199]\n  v_string <- gdal_metadata(file_name)[219]\n  \n  # We parse the h/v string to pull out the integer number of h and v\n  tile_h <- as.integer(str_split(h_string, \"=\", simplify = TRUE)[[2]])\n  tile_v <- as.integer(str_split(v_string, \"=\", simplify = TRUE)[[2]])\n\n  # From the h/v tile grid position, we get the offset and the extent\n  west <- (10 * tile_h) - 180\n  north <- 90 - (10 * tile_v)\n  east <- west + 10\n  south <- north - 10\n\n  # A tile is 10 degrees and has 2400x2400 grid cells\n  delta <- 10 / 2400\n\n  # Reading the dataset\n  dnb <- read_stars(file_name, sub = dataset_name)\n\n  # Setting the CRS and applying offsets and deltas\n  st_crs(dnb) <- st_crs(4326)\n  st_dimensions(dnb)$x$delta <- delta\n  st_dimensions(dnb)$x$offset <- west\n  st_dimensions(dnb)$y$delta <- -delta\n  st_dimensions(dnb)$y$offset <- north\n  \n  return(dnb)\n}\n\n\n\nLoad in the\nSatellite Data: tilenumber_mm_dd\nNext we load the four tiles that give us a complete image of Houston\non 2021-02-07 and 2021-02-16. We save the tiles under the naming\nconvention tilenumber_mm_dd.\n\n\nShow code\n\nfile_name <- \"data/VNP46A1/VNP46A1.A2021038.h08v05.001.2021039064328.h5\"\nt05_02_07 <- read_dnb(file_name = file_name)\n\n\n//HDFEOS/GRIDS/VNP_Grid_DNB/Data_Fields/DNB_At_Sensor_Radiance_500m, \n\nShow code\n\nfile_name <- \"data/VNP46A1/VNP46A1.A2021038.h08v06.001.2021039064329.h5\"\nt06_02_07 <- read_dnb(file_name = file_name)\n\n\n//HDFEOS/GRIDS/VNP_Grid_DNB/Data_Fields/DNB_At_Sensor_Radiance_500m, \n\nShow code\n\nfile_name <- \"data/VNP46A1/VNP46A1.A2021047.h08v05.001.2021048091106.h5\"\nt05_02_16 <- read_dnb(file_name = file_name)\n\n\n//HDFEOS/GRIDS/VNP_Grid_DNB/Data_Fields/DNB_At_Sensor_Radiance_500m, \n\nShow code\n\nfile_name <- \"data/VNP46A1/VNP46A1.A2021047.h08v06.001.2021048091105.h5\"\nt06_02_16 <- read_dnb(file_name = file_name)\n\n\n//HDFEOS/GRIDS/VNP_Grid_DNB/Data_Fields/DNB_At_Sensor_Radiance_500m, \n\nCombine Tiles by Day\nst_mosaic() is used to combine the tiles for each day to\nprovide a complete picture of Houston on each day, then we use\nrm() to clear the large original tiles.\n\n\nShow code\n\ncombined_02_07 <- st_mosaic(t05_02_07, t06_02_07)\n\ncombined_02_16 <- st_mosaic(t05_02_16, t06_02_16)\n\nrm(t05_02_07, t06_02_07, t05_02_16, t06_02_16)\ngc()\n\n\n           used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)\nNcells  2823284 150.8    4537211 242.4         NA  4537211 242.4\nVcells 26971733 205.8   63966646 488.1      16384 61692780 470.7\n\nCreate a Blackout Mask\nTo create a blackout mask, we identify cells where the difference in\nDNB between 2021-02-07 and 2021-02-16 is greater than 200 nW cm^-2\nsr^-1. Where the difference is less than this threshold, we assign a\nvalue of NA.\n\n\nShow code\n\ndifference_mask <- (combined_02_07 - combined_02_16) > 200\n\ndifference_mask[difference_mask == FALSE] <- NA\n\nrm(combined_02_07,combined_02_16)\ngc()\n\n\n          used  (Mb) gc trigger  (Mb) limit (Mb) max used  (Mb)\nNcells 2824193 150.9    4537211 242.4         NA  4537211 242.4\nVcells 9693966  74.0   54104736 412.8      16384 67630920 516.0\n\nVectorize the Blackout Mask\nWe use st_as_sf() to vectorize the blackout mask and\nthen st_make_valid() to repair the geometries of some of\nthe polygons in the resulting vectorized mask.\n\n\nShow code\n\ndifference_mask <- st_as_sf(difference_mask)\n\ndifference_mask <- st_make_valid(difference_mask)\n\n\n\nCrop\nthe Vectorized Mask with the Region of Interest (ROI)\nWe create a bounding box of the Houston metropolitan area and then\ngive it a CRS of WGS 84 (for the time being).\n\n\nShow code\n\nroi = st_polygon(list(rbind(c(-96.5, 29), \n                            c(-96.5, 30.5), \n                            c(-94.5, 30.5), \n                            c(-94.5, 29), \n                            c(-96.5, 29))))\n\n# plot(roi)\n\nroi <- st_sfc(roi, crs = 4326)\n\n\n\nSpatial Subsetting\nUsing our bounding box, we create a cropped difference mask by\nkeeping only the values of the cells that intersect the bounding box,\nthen we use st_transform() to give the cropped data a\nprojected CRS of NAD83/Texas Centric Albers.\n\n\nShow code\n\nintersects <- st_intersects(difference_mask, roi, sparse = FALSE)\ncropped = difference_mask[intersects,]\n\ncrs = st_crs(3083)\ncropped = st_transform(cropped, crs)\n\nrm(difference_mask)\ngc()\n\n\n          used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)\nNcells 3060540 163.5    4537211 242.4         NA   4537211  242.4\nVcells 4454639  34.0  110598994 843.9      16384 133455011 1018.2\n\nRead in and Process the\nRoads Data\nFunction to\nLoad the Doads Data from OpenStreetMap\nWe use the SQL query provided to us from the class to read in the\ndata where the column fclass is “motorway” in the OSM roads\ndataset.\n\n\nShow code\n\nquery_r <- \"SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'\"\nhighways <- st_read(\"data/gis_osm_roads_free_1.gpkg\", query = query_r)\n\n\nReading query `SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'' from data source `/Users/Joe/Documents/Bren/Website/joedecesaro.github.io/_posts/2022-05-07-houston-blackout-analysis/data/gis_osm_roads_free_1.gpkg' \n  using driver `GPKG'\nSimple feature collection with 6085 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -96.50429 ymin: 29.00174 xmax: -94.39619 ymax: 30.50886\nGeodetic CRS:  WGS 84\n\nBuffer the roads\nNext, we use st_transform() to reproject the data to\nNAD83/Texas Centric Albers, then create a buffer of 200 m around the\nhighways.\n\n\nShow code\n\n#st_crs(highways)\n\nhighways = st_transform(highways, crs)\n\nhighways_buffered = st_union(st_buffer(highways, dist = 200))\n\nrm(highways)\ngc()\n\n\n          used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)\nNcells 2916706 155.8    4537211 242.4         NA   4537211  242.4\nVcells 4284814  32.7   88479196 675.1      16384 133455011 1018.2\n\nRead in and Process the\nBuildings Data\nFunction\nto Load the Buildings Data from OpenStreetMap\nWe use the SQL query provided to us in homework 2 to identify and\nread in the data where the type is NULL and name is NULL, or where the\ntype is “residential”, “apartments”, “house”, “static_caravan”, or\n“detached” from the OSM buildings dataset to acquire data of residences\nin the Houston area.\n\n\nShow code\n\nquery_b <- \"SELECT * \nFROM gis_osm_buildings_a_free_1\nWHERE (type IS NULL AND name IS NULL)\nOR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')\"\n\nresidences <- st_read(\"data/gis_osm_buildings_a_free_1.gpkg\", query = query_b)\n\n\nReading query `SELECT * \nFROM gis_osm_buildings_a_free_1\nWHERE (type IS NULL AND name IS NULL)\nOR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')' from data source `/Users/Joe/Documents/Bren/Website/joedecesaro.github.io/_posts/2022-05-07-houston-blackout-analysis/data/gis_osm_buildings_a_free_1.gpkg' \n  using driver `GPKG'\nSimple feature collection with 475941 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -96.50055 ymin: 29.00344 xmax: -94.53285 ymax: 30.50393\nGeodetic CRS:  WGS 84\n\nReprojecting the Residences\nData\nThen, we use st_transform() to reproject the residences\ndata in NAD83/Texas Centric Albers.\n\n\nShow code\n\nresidences = st_transform(residences, crs)\n\n#st_crs(residences)\n\n\n\nRead in the Census tract\ndata\nWe explore the available census data, then read in the census tract\ngeometries data, as well as income data. We reproject the census tract\ngeometries to NAD83/Texas Centric Albers, and subset the income data to\nkeep the median income data.\n\n\nShow code\n\n# st_layers(\"data/ACS_2019_5YR_TRACT_48_TEXAS.gdb\")\n\nacs_geoms <- st_read(\"data/ACS_2019_5YR_TRACT_48_TEXAS.gdb\",\n                     layer = \"ACS_2019_5YR_TRACT_48_TEXAS\")\n\n\nReading layer `ACS_2019_5YR_TRACT_48_TEXAS' from data source \n  `/Users/Joe/Documents/Bren/Website/joedecesaro.github.io/_posts/2022-05-07-houston-blackout-analysis/data/ACS_2019_5YR_TRACT_48_TEXAS.gdb' \n  using driver `OpenFileGDB'\nSimple feature collection with 5265 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -106.6456 ymin: 25.83716 xmax: -93.50804 ymax: 36.5007\nGeodetic CRS:  NAD83\n\nShow code\n\nacs_geoms = st_transform(acs_geoms, crs)\n\nacs_income <- st_read(\"data/ACS_2019_5YR_TRACT_48_TEXAS.gdb\",\n                      layer = \"X19_INCOME\")\n\n\nReading layer `X19_INCOME' from data source \n  `/Users/Joe/Documents/Bren/Website/joedecesaro.github.io/_posts/2022-05-07-houston-blackout-analysis/data/ACS_2019_5YR_TRACT_48_TEXAS.gdb' \n  using driver `OpenFileGDB'\n\nShow code\n\nmedian_income <- acs_income[c(\"GEOID\", \"B19013e1\")]\n\nrm(acs_income)\ngc()\n\n\n           used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)\nNcells  6804540 363.5   15204982 812.1         NA  15204982  812.1\nVcells 26640844 203.3   70783357 540.1      16384 133455011 1018.2\n\nMerge the Datasets\nMerge\nthe Night Lights Data, the Buffered Highways, and the Residences\nWe remove the buffered highways from the blacked out night lights\ndata using st_difference(), then use\nst_intersects to find buildings within the blacked out\nnight lights data that were affected by the blackout.\n\n\nShow code\n\ncropped_no_highways <- st_difference(cropped, highways_buffered)\n\naffected_buildings <- residences[cropped_no_highways, op = st_intersects]\n\n\n\nMerge\nthe census tract geometries with the census income data\nWe use a left join to merge the census data with the census tract\ngeometries, using their shared information in the columns\nGEOID_Data and GEOID.\n\n\nShow code\n\nacs_geom_income <- dplyr::left_join(acs_geoms, median_income, by = c(\"GEOID_Data\" = \"GEOID\"))\n\nrm(acs_geoms)\ngc()\n\n\n           used  (Mb) gc trigger  (Mb) limit (Mb)  max used   (Mb)\nNcells  6861241 366.5   15204982 812.1         NA  15204982  812.1\nVcells 27814783 212.3   70783357 540.1      16384 133455011 1018.2\n\nQuestion\n1: How many residential buildings were without power on 2021-02-16?\nThe number of residential buildings that were without power on\n2021-02-16 is 157411\nQuestion\n2: Is there a socioeconomic metric that predicts being affected by the\npower outage?\nFirst we map median income by census tracts with residences affected\nby the blackout:\n\n\nShow code\n\n#Bounding box and basemap\nhouston_bb <- st_bbox(roi)\nhouston_map <- osm.raster(houston_bb)\n\n# tmap::tmap_mode(mode = \"plot\")\n# \n# #Creating the map\n# tm_shape(houston_map) +\n#   tm_rgb() +\n#   tm_shape(acs_geom_income,\n#            bbox = houston_bb) +\n#   tm_polygons(col = \"B19013e1\",\n#               title = \"Median Income\",\n#               colorNA = \"black\",\n#               style = \"cont\",\n#               palette = \"Blues\") +\n#   tm_shape(affected_buildings,\n#            bbox = houston_bb) +\n#   tm_polygons() + tm_style(\"col_blind\") +\n#   tm_layout(title = \"Households Affected by Blackout and Median Income\")\n\n\n\n Note: the figure above was\noriginally designed to be interactive but this was changed for this post\ndue to excessive load times.\nFigure 1. Exploratory map showing median household\nincome by census tract (dark blue = high income), overlaid with\nlocations of residences that lost power during the February blackout.\nData is from Open Street Map and NASA’s Worldview.\nThat looks interesting but it’s hard to identify patterns. It does\nappear thata large cluster of homes in two census tracts in western\nHouston lost power. This is a extreme concentration of homes that lost\npower compared to other areas.Now we make a histogram of median income\nfor all households in the Houston metropolitan area to compare with a\nhistogram of median income for households impacted by the blackout:\nFirst, spatially join the residences data with the median income\ndata:\n\n\nShow code\n\nresidences_income <- st_join(residences, acs_geom_income, join = st_intersects)\n\n\n\nThen, subset the resulting dataset to only include residences\naffected by the blackout:\n\n\nShow code\n\nimpacted_residences_income <- residences_income[cropped_no_highways, op = st_intersects]\n\n\n\nFinally, build the two histograms and display them side-by-side\nusing patchwork:\n\n\nShow code\n\n#All residences\nhistogram_residences_income <- ggplot(residences_income) +\n  geom_histogram(aes(x = residences_income$B19013e1), bins = 100, fill = \"darkblue\") +\n  labs(title = \"All Houston Residences\",\n       x = \"Median Household Income\",\n       y = \"Count\") +\n  theme_minimal() +\n  scale_y_discrete(limits = c(5000,10000,15000,20000)) +\n  ylim(c(0, 20000))\n\n#Impacted residences\nhistogram_impacted_income <- ggplot(impacted_residences_income) +\n  geom_histogram(aes(x = impacted_residences_income$B19013e1), bins = 100, fill = \"darkblue\") +\n  labs(title = \"Impacted Houston Residences\",\n       x = \"Median Household Income\",\n       y = \"Count\") +\n  theme_minimal() +\n  scale_y_discrete(limits = c(5000,10000,15000,20000)) +\n  ylim(c(0, 20000))\n\nhistogram_residences_income + histogram_impacted_income\n\n\n\n\nFigure 2. Histogram showing the number of homes by\ncensus tract median household income in the Houston metropolitan area\n(left) and the number of homes impacted during the blackout by census\ntract median household income (right). Data is from Open Street Map and\nNASA’s Worldview.\nThe impacted residences histogram shows relatively fewer low income\nhouseholds impacted compared to the density of low income households in\nthe total area. Though the number of impacted high income households is\nlower than the total high income households, it appears to be relatively\nhigher than impacted low income households. Interestingly, income may be\npositively correlated with likelihood of being impacted. However,this\ncould be due to the aforementioned census tract areas where a large\npercent of houses lost power.\nConclusions\nMore than 150,000 residences lost power during the February blackout\nin the Houston area alone. This is likely an underestimate, as\nresidences may have been excluded due to our highways buffer,\ninterference in the satellite from clouds or other atmospheric\ndifferences, or due to our exclusion of cells where the difference was\nnot greater than 200 nW cm^-2 sr^-1. The socioeconomic factor that we\nexamined, median income, is not clearly correlated with likelihood of\nbeing impacted by the blackout, though there may be a slight positive\ncorrelation between income and likelihood. We also explored census race\ndata for white only households but there was no obvious correlation\nbetween a household being white and likelihood of losing power. The race\ndata exploration and download code was removed from this document so\nthat the markdown was more streamlined and did not overburden the\ncomputers.However, other socioeconomic factors that we did not examine\nmay have been more strongly correlated.\n\n\n\n",
    "preview": "posts/2022-05-07-houston-blackout-analysis/images/blackout_map.png",
    "last_modified": "2022-05-07T19:51:35-07:00",
    "input_file": {},
    "preview_width": 737,
    "preview_height": 469
  },
  {
    "path": "posts/2021-08-10-a-function-i-learned/",
    "title": "The Basics of the ggplot() Function",
    "description": "A short introduction to the `ggplot()` function within the tidyverse library.",
    "author": [
      {
        "name": "Joe DeCesaro",
        "url": {}
      }
    ],
    "date": "2021-08-10",
    "categories": [
      "R",
      "tidyverse"
    ],
    "contents": "\n\n\nShow code\n\nknitr::opts_chunk$set(echo = FALSE)\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\n\n\nThe basics of the\nggplot() function:\nggplot() allows for the easy plotting of various types\nof graphic representations of data frames. These plots can start out as\nsimple but can also be highly complex and customized. Below is an\nexample of a simple point graph of data from the Palmer Penguins data\nset.\n\n\nShow code\n\nggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n\n\n\n\nNote that it is critical to specify the type of plot desired after\nthe ggplot() function. Below is an example of using the\ngeom_line() function where above uses the\ngeom_point() function.\n\n\nShow code\n\nggplot(data = penguins, aes( x = flipper_length_mm, y = body_mass_g)) +\n  geom_line()\n\n\n\n\nLooking at the scatter plot above (not the line plot) does not\nprovide much useful information from the data set. In data science it is\nimportant to call out specific groups within your data. In the Palmer\nPenguins data, three separate species of penguins are observed. Let’s\ntake a look at how we can separate the data by species within the\nplot.\n\n\nShow code\n\nggplot(data = penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(color = species))\n\n\n\n\nBy seperating the data by species we can now clearly draw some\ndistinct conclusions from the data for each species. For example, we\nknow that Gentoo penguins will generally be the largest penguins.\nIt is always a good idea to take a look at your data BEFORE you begin\nworking with it. By looking at the penguins data prior to\nplotting it, I would have known that there were three species within\nthis data set and that I should probably have seperated them in the plot\nfrom the beginning.\nThis is a very brief introduction to the ggplot()\nfunction. Future posts will add to the foundations set in this\nintroduciton.\n\n\n\n",
    "preview": "posts/2021-08-10-a-function-i-learned/images/ggplot_ex.png",
    "last_modified": "2022-05-07T10:56:20-07:00",
    "input_file": {},
    "preview_width": 1400,
    "preview_height": 865
  }
]
